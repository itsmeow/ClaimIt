buildscript {
    repositories {
        jcenter()
        maven { url = "http://files.minecraftforge.net/maven" }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.3-SNAPSHOT'
        classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.7'
    }
}
apply plugin: 'net.minecraftforge.gradle.forge'
apply plugin: 'com.jfrog.bintray'
apply plugin: 'maven'
apply plugin: 'maven-publish'

version = "${project.mc_version}-${project.mod_version}"
group = project.maven_group
archivesBaseName = project.mod_id

sourceCompatibility = targetCompatibility = '1.8'
compileJava {
    sourceCompatibility = targetCompatibility = '1.8'
}

minecraft {
    version = "${project.mc_version}-${project.forge_version}"
    runDir = "run"
    mappings = project.mcp_mappings
    replace "@VERSION@", "${project.mc_version}-${project.mod_version}"
    replace "@APIVERSION@", "${project.mc_version}-${project.api_version}"
    makeObfSourceJar = false
}

dependencies {

}

// API build task
task apiJar(type: Jar) {
    onlyIf {
        project.hasProperty("api_package")
    }
    version = "${project.mc_version}-${project.api_version}"
    from sourceSets.main.allSource
    from sourceSets.main.output
    include String.valueOf(findProperty("api_package")).replace(".", "/") + "/**"
    from "LICENSE"
    manifest.mainAttributes(
            "Built-On-Java": "${System.getProperty('java.vm.version')} + (${System.getProperty('java.vm.vendor')})",
            "Implementation-Title": project.name + '-api',
            "Implementation-Version": "${project.mc_version}-${project.api_version}",
            "Maven-Artifact": "${project.group}:${project.archivesBaseName}:${project.mc_version}-${project.api_version}:api",
            "Built-On": "${mc_version}-${forge_version}"
    )
    classifier = 'api'
}

task srcJar(type: Jar) {
    from sourceSets.main.allJava
	
	extension = 'jar'
	classifier = 'sources'
	if (project.hasProperty('api_package')) {
        exclude String.valueOf(findProperty('api_package')).replace(".", "/") + "/**"
    }
}

reobf {
    apiJar {}
    jar {}
}

artifacts {
    archives srcJar, apiJar
}

jar {
    from "LICENSE"
    manifest.mainAttributes(
            "Implementation-Title": project.name,
            "Implementation-Version": "${project.version}",
            "Built-On": "${project.mc_version}-${project.forge_version}",
            "Maven-Artifact": "${project.group}:${project.archivesBaseName}:${project.version}",
    )
    if (project.hasProperty('api_package')) {
        exclude String.valueOf(findProperty('api_package')).replace(".", "/") + "/**"
    }
    classifier ''
}

publishing {
    publications {
        publish(MavenPublication) {
			from components.java
            artifact srcJar
			artifact apiJar
            groupId project.maven_group
            artifactId project.mod_id
            version project.version
        }
    }
}

bintray {
	user = project.hasProperty('bintrayUser') ? project.property('bintrayUser') : ''
	key = project.hasProperty('bintrayApiKey') ? project.property('bintrayApiKey') : ''
	publications = ['publish']
	pkg {
        repo = 'maven'
        name = 'ClaimIt'
		
		version {
            name = project.version
            released  = new Date()
        }
    }
}


processResources {
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
                
        expand 'version':project.mod_version, 'mcversion':project.minecraft.version
    }
        
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}